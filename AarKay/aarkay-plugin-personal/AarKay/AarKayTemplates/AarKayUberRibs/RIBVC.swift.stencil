import UIKit
import RxSwift
import RxCocoa
{% for import in imports %}
import {{import}}
{% endfor %}

protocol {{name}}PresentableListener: class {
    func didDismiss{{name}}()
    /// <aarkay {{name}}PresentableListener>
    /// </aarkay>
}

class {{name}}ViewController: {{vcType}}Controller, {{name}}Presentable {
    {% if depsVC %}

    {% for dep in depsVC %}
    var {{dep.name}}: {{dep.type}}
    {% endfor %}
    {% endif %}

    weak var listener: {{name}}PresentableListener!
    var disposeBag = DisposeBag()

    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        /// <aarkay viewDidDisappear>
        /// </aarkay>
        if isMovingFromParentViewController {
            listener.didDismiss{{name}}()
        }
    }

    /// <aarkay {{name}}ViewController>
    /// </aarkay>

}
