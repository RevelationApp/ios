//     _____                  ____  __.
//    /  _  \ _____ _______  |    |/ _|____  ___.__.
//   /  /_\  \\__  \\_  __ \ |      < \__  \<   |  |
//  /    |    \/ __ \|  | \/ |    |  \ / __ \\___  |
//  \____|__  (____  /__|    |____|__ (____  / ____|
//          \/     \/                \/    \/\/
//
//  Generated by AarKay on 27/12/18.
//  Copyright Â© 2018 RahulKatariya. All rights reserved.
//

import CoreData
{% if apiModuleName %}import {{ apiModuleName }}{% endif %}

struct {{ name }}Sync: CoreDataSyncable {
    typealias Response = {{ response }}
    typealias Request = {{ name }}{{ method|uppercase }}Service

    let context: NSManagedObjectContext
    {% for pathParam in pathParams %}
    {% for key, value in pathParam %}
    let {{ key }}: {{ value }}
    {% endfor %}
    {% endfor %}
    {% if requestModel or parameters %}
    var parameters: Any?
    {% endif %}
    {% if queryModel or queryParameters %}
    var queryParameters: [String: Any]?
    {% endif %}

    init(context: NSManagedObjectContext{% if initParams %}, {{ initParams }}{% endif %}) {
        self.context = context
        {% for pathParam in pathParams %}
        {% for key, value in pathParam %}
        self.{{ key }} = {{ key }}
        {% endfor %}
        {% endfor %}
        {% if requestModel %}
        self.parameters = parameters.any()
        {% elif parameters %}
        self.parameters = parameters
        {% endif %}
        {% if queryModel %}
        self.queryParameters = queryParameters.any() as? [String : Any]
        {% elif queryParameters %}
        self.queryParameters = queryParameters
        {% endif %}
    }

    func request() -> Request {
        return {{ name }}{{ method|uppercase }}Service({% if initParams %}{{ initExecParams }}{% endif %})
    }

    func shouldSync(completion: (Bool) throws -> ()) throws {
        /// <aarkay shouldSync{{ name }}Sync>
        /// </aarkay>
    }

    func insert(model: Response, completion: () throws -> ()) throws {
        /// <aarkay insert{{ name }}Sync>

        /// </aarkay>
    }
}
